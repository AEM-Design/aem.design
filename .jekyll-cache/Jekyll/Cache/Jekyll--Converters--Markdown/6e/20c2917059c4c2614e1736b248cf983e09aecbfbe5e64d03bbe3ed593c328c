I"u<aside class="sidebar__right">
<nav class="toc">
    <header><h4 class="nav__title"><i class="fas fa-file-alt"></i> On This Page</h4></header>
<ul class="toc__menu" id="markdown-toc">
  <li><a href="#reference-material" id="markdown-toc-reference-material">Reference Material</a></li>
  <li><a href="#sample-js-project-namespace" id="markdown-toc-sample-js-project-namespace">Sample JS Project Namespace</a></li>
  <li><a href="#sample-js-console-log-utility-class" id="markdown-toc-sample-js-console-log-utility-class">Sample JS Console Log Utility Class</a></li>
  <li><a href="#sample-js-component-namespace" id="markdown-toc-sample-js-component-namespace">Sample JS Component Namespace</a></li>
  <li><a href="#sample-health-check" id="markdown-toc-sample-health-check">Sample Health Check</a></li>
  <li><a href="#sample-adaptive-image" id="markdown-toc-sample-adaptive-image">Sample Adaptive Image</a></li>
  <li><a href="#sample-sling-content-manipulation" id="markdown-toc-sample-sling-content-manipulation">Sample Sling Content Manipulation</a></li>
  <li><a href="#import-utf-characters-using-sling" id="markdown-toc-import-utf-characters-using-sling">Import UTF Characters using Sling</a></li>
</ul>

  </nav>
</aside>

<p>These sections that follow are samples that should be built upon to adopt to your situation.</p>

<h2 id="reference-material">Reference Material</h2>

<p><a href="https://docs.adobe.com/docs/en/cq/5-6-1/exploring/architecture-overview.html">Architecture Overview 5.6.1</a></p>

<p><a href="https://github.com/paulrohrbeck/aem-links">AEM Links</a></p>

<h2 id="sample-js-project-namespace">Sample JS Project Namespace</h2>

<p>location: <code class="highlighter-rouge">/etc/designs/`/js/namespace-aem-design.js</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//namespace-aemdesign.js</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">||</span> <span class="p">{};</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">jQuery</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span> <span class="o">||</span> <span class="p">{};</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">$</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span> <span class="o">||</span> <span class="nx">$</span><span class="p">;</span>

<span class="p">;(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">ns</span><span class="p">,</span> <span class="nb">window</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//add additional dependencies</span>

    <span class="dl">"</span><span class="s2">use strict</span><span class="dl">"</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">_version</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">0.1</span><span class="dl">"</span><span class="p">;</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">_version</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">HTTP</span><span class="p">;</span>

    <span class="nx">$</span><span class="p">.</span><span class="nx">ajaxSetup</span><span class="p">({</span> <span class="c1">// necessary global modifications for ajax calls</span>
        <span class="na">statusCode</span><span class="p">:</span> <span class="p">{</span>
            <span class="mi">403</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">jqXHR</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">jqXHR</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="dl">"</span><span class="s2">X-Reason</span><span class="dl">"</span><span class="p">)</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Authentication Failed</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
                    <span class="c1">// login session expired: redirect to login page</span>
                    <span class="nx">http</span><span class="p">.</span><span class="nx">handleLoginRedirect</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">});</span>

    <span class="nx">$</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">.</span><span class="nx">traditional</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>


<span class="p">})(</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span> <span class="nx">AEMDESIGN</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span> <span class="c1">//pass in additional dependencies</span>
</code></pre></div></div>

<h2 id="sample-js-console-log-utility-class">Sample JS Console Log Utility Class</h2>

<p>location: <code class="highlighter-rouge">/etc/designs/aem-design/js/aem-design.log.js</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//aem-design.log.js</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">||</span> <span class="p">{};</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">log</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">log</span> <span class="o">||</span> <span class="p">{};</span>

<span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">ns</span><span class="p">,</span> <span class="nb">window</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//add additional dependencies</span>

    <span class="c1">//"use strict";</span>
    <span class="kd">var</span> <span class="nx">_version</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">0.1</span><span class="dl">"</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">enableLog</span><span class="p">:</span> <span class="kc">false</span>
    <span class="p">}</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">_version</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">enableLog</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">settings</span><span class="p">.</span><span class="nx">enableLog</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">disableLog</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">settings</span><span class="p">.</span><span class="nx">enableLog</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>


    <span class="nx">ns</span><span class="p">.</span><span class="nx">log</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>

        <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span> <span class="o">&amp;&amp;</span> <span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">location</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">'</span><span class="s1">href</span><span class="dl">'</span><span class="p">);</span>

            <span class="kd">var</span> <span class="nx">traceStack</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">printStackTrace</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">function</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">traceStack</span> <span class="o">=</span> <span class="nx">printStackTrace</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="kd">var</span> <span class="nx">debug</span> <span class="o">=</span> <span class="p">{</span>
                <span class="dl">"</span><span class="s2">caller</span><span class="dl">"</span><span class="p">:</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">caller</span><span class="p">,</span>
                <span class="dl">"</span><span class="s2">traceStack</span><span class="dl">"</span><span class="p">:</span> <span class="nx">traceStack</span>
            <span class="p">};</span>

            <span class="k">if</span> <span class="p">(</span><span class="nx">settings</span><span class="p">.</span><span class="nx">enableLog</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">([</span><span class="nx">url</span><span class="p">,</span><span class="nx">data</span><span class="p">,</span><span class="nx">debug</span><span class="p">]);</span>
            <span class="p">}</span>
        <span class="p">}</span>

    <span class="p">};</span>

<span class="p">})(</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span> <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">log</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span> <span class="c1">//pass in additional dependencies</span>
</code></pre></div></div>

<h2 id="sample-js-component-namespace">Sample JS Component Namespace</h2>

<p>location: <code class="highlighter-rouge">/apps/aemdesign/componentX/clientslibs/js.txt</code></p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#base=js

functions.js
behaviour.js
</code></pre></div></div>

<p>location: <code class="highlighter-rouge">/apps/aemdesign/componentX/clientslibs/js/behaviour.js</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//searchBox - behaviour</span>

<span class="p">;(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">ko</span><span class="p">,</span> <span class="nx">searchBox</span><span class="p">,</span> <span class="nb">window</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//add additional dependencies</span>

    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">[data-modules='Search']</span><span class="dl">"</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

            <span class="kd">var</span> <span class="nx">base</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
            <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">loading search box</span><span class="dl">"</span><span class="p">);</span>
            <span class="nx">searchBox</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">base</span><span class="p">);</span>

        <span class="p">});</span>
    <span class="p">});</span>


<span class="p">})(</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">ko</span><span class="p">,</span>  <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">searchBox</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span> <span class="c1">//pass in additional dependencies</span>
</code></pre></div></div>

<p>location: <code class="highlighter-rouge">/apps/aemdesign/componentX/clientslibs/js/functions.js</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//searchBox - functions</span>

<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span> <span class="o">||</span> <span class="p">{};</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span> <span class="o">=</span> <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span> <span class="o">||</span> <span class="p">{};</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">searchBox</span> <span class="o">=</span> <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">searchBox</span> <span class="o">||</span> <span class="p">{};</span>

<span class="p">;(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">ko</span><span class="p">,</span> <span class="nx">ns</span><span class="p">,</span> <span class="nb">window</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//add additional dependencies</span>

    <span class="dl">"</span><span class="s2">use strict</span><span class="dl">"</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">_version</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">0.1</span><span class="dl">"</span><span class="p">;</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">_version</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="nx">ns</span><span class="p">.</span><span class="nx">init</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$el</span><span class="p">)</span> <span class="p">{</span>

        <span class="k">return</span> <span class="nx">$el</span><span class="p">;</span> <span class="c1">//chaining</span>
    <span class="p">};</span>

<span class="p">})(</span><span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span><span class="nx">_</span><span class="p">,</span><span class="nx">ko</span><span class="p">,</span> <span class="nx">AEMDESIGN</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">searchBox</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span> <span class="c1">//pass in additional dependencies</span>
</code></pre></div></div>

<h2 id="sample-health-check">Sample Health Check</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">aem</span><span class="o">-</span><span class="n">design</span><span class="o">.</span><span class="na">health</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.felix.scr.annotations.sling.SlingServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.felix.scr.annotations.Property</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.sling.api.SlingHttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.sling.api.SlingHttpServletResponse</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.sling.api.servlets.SlingAllMethodsServlet</span><span class="o">;</span>

<span class="nd">@SlingServlet</span><span class="o">(</span><span class="n">paths</span> <span class="o">=</span> <span class="s">"/bin/aem-design/health"</span><span class="o">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="s">"GET"</span><span class="o">,</span> <span class="n">metatype</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
<span class="nd">@Property</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"sling.auth.requirements"</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">"-/bin/aem-design/health"</span><span class="o">,</span> <span class="n">propertyPrivate</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HealthServlet</span> <span class="kd">extends</span> <span class="nc">SlingAllMethodsServlet</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">636174686179L</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">SlingHttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">SlingHttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">write</span><span class="o">(</span><span class="s">"AEM-OK"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="sample-adaptive-image">Sample Adaptive Image</h2>

<p>location: <code class="highlighter-rouge">/apps/aemdesign/content/image/variant.responsive.jsp</code></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/content/geometrixx-media/en/events/andrew-novokov.html"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">data-picture</span> <span class="na">data-alt=</span><span class="s">'Interview with Russian author Andrew Novokov'</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">data-src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.370.150.medium.jpg'</span> <span class="na">data-media=</span><span class="s">"(min-width: 1px)"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">data-src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.480.190.medium.jpg'</span> <span class="na">data-media=</span><span class="s">"(min-width: 480px)"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">data-src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.770.300.medium.jpg'</span> <span class="na">data-media=</span><span class="s">"(min-width: 768px)"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">data-src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.940.340.high.jpg'</span>   <span class="na">data-media=</span><span class="s">"(min-width: 980px)"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">data-src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.1170.400.high.jpg'</span>  <span class="na">data-media=</span><span class="s">"(min-width: 1199px)"</span><span class="nt">&gt;&lt;/div&gt;</span>
        <span class="nt">&lt;noscript&gt;</span>
            <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">'/content/geometrixx-media/en/events/andrew-novokov.image.370.150.low.jpg'</span> <span class="na">alt=</span><span class="s">'Interview with Russian author Andrew Novokov'</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/noscript&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>

<p>location: <code class="highlighter-rouge">/apps/aemdesign/content/image/clientslibs/js/functions.js</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">div[data-picture]</span><span class="dl">"</span><span class="p">,</span> <span class="nx">context</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">currentPicture</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">div[data-media]</span><span class="dl">"</span><span class="p">,</span> <span class="nx">currentPicture</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">media</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">"</span><span class="s2">data-media</span><span class="dl">"</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">media</span> <span class="o">||</span> <span class="p">(</span> <span class="nx">w</span><span class="p">.</span><span class="nx">matchMedia</span> <span class="o">&amp;&amp;</span> <span class="nx">w</span><span class="p">.</span><span class="nx">matchMedia</span><span class="p">(</span><span class="nx">media</span><span class="p">).</span><span class="nx">matches</span> <span class="p">))</span> <span class="p">{</span>
            <span class="nx">matches</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>

    <span class="kd">var</span> <span class="nx">$picImg</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">img</span><span class="dl">"</span><span class="p">,</span> <span class="nx">currentPicture</span><span class="p">).</span><span class="nx">first</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">$picImg</span><span class="p">.</span><span class="nx">size</span><span class="p">()</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">$currentPicture</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">currentPicture</span><span class="p">);</span>
            <span class="nx">$picImg</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="dl">"</span><span class="s2">&lt;img /&gt;</span><span class="dl">"</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="dl">"</span><span class="s2">alt</span><span class="dl">"</span><span class="p">,</span> <span class="nx">$currentPicture</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="dl">"</span><span class="s2">data-alt</span><span class="dl">"</span><span class="p">)).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">$currentPicture</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nx">$picImg</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="dl">"</span><span class="s2">src</span><span class="dl">"</span><span class="p">,</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">pop</span><span class="p">().</span><span class="nx">getAttribute</span><span class="p">(</span><span class="dl">"</span><span class="s2">data-src</span><span class="dl">"</span><span class="p">));</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">$picImg</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">});</span>
</code></pre></div></div>

<h2 id="sample-sling-content-manipulation">Sample Sling Content Manipulation</h2>

<p>Sling allows ability to automate content creation, deletion and updates.</p>

<p>Sling API Manipulation Manual : <a href="http://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html">http://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html</a></p>

<h2 id="import-utf-characters-using-sling">Import UTF Characters using Sling</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-X</span> POST <span class="nt">-u</span> <span class="s2">"admin:admin"</span> <span class="nt">-F</span><span class="s2">"_charset_=utf-8"</span> <span class="nt">--form-string</span> <span class="s2">"text-ja=あなたが喜んで学ぶならば、誰かが喜んで教えるでしょう！。"</span> http://localhost:4502/content/testpage/jcr:content/par/label
</code></pre></div></div>
:ET