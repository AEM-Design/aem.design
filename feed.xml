<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://aem.design/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aem.design/" rel="alternate" type="text/html" /><updated>2020-02-14T03:57:42+00:00</updated><id>https://aem.design/feed.xml</id><title type="html">AEM.Design</title><subtitle>An amazing website.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;uri&quot;=&gt;nil, &quot;bitbucket&quot;=&gt;nil, &quot;codepen&quot;=&gt;nil, &quot;dribbble&quot;=&gt;nil, &quot;flickr&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;foursquare&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;google_plus&quot;=&gt;nil, &quot;keybase&quot;=&gt;nil, &quot;instagram&quot;=&gt;nil, &quot;lastfm&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;pinterest&quot;=&gt;nil, &quot;soundcloud&quot;=&gt;nil, &quot;stackoverflow&quot;=&gt;nil, &quot;steam&quot;=&gt;nil, &quot;tumblr&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;vine&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;xing&quot;=&gt;nil, &quot;youtube&quot;=&gt;nil}</name></author><entry><title type="html">AEM SaaS Hands On üòçüöÄüî≠</title><link href="https://aem.design/blog/2020/02/01/aem-saas-hands-on%F0%9F%98%8D%F0%9F%9A%80%F0%9F%94%AD" rel="alternate" type="text/html" title="AEM SaaS Hands On üòçüöÄüî≠" /><published>2020-02-01T00:37:00+00:00</published><updated>2020-02-01T00:37:00+00:00</updated><id>https://aem.design/blog/2020/02/01/aem-saas-hands-on</id><content type="html" xml:base="https://aem.design/blog/2020/02/01/aem-saas-hands-on%F0%9F%98%8D%F0%9F%9A%80%F0%9F%94%AD">&lt;div class=&quot;sticky&quot;&gt;
    &lt;aside class=&quot;sidebar__right&quot;&gt;
&lt;nav class=&quot;toc&quot;&gt;
      &lt;header&gt;&lt;h4 class=&quot;nav__title&quot;&gt;&lt;i class=&quot;fas fa-file-alt&quot;&gt;&lt;/i&gt; On This Page&lt;/h4&gt;&lt;/header&gt;
&lt;ul class=&quot;toc__menu&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#aem-saas-author-hand-on&quot; id=&quot;markdown-toc-aem-saas-author-hand-on&quot;&gt;AEM SaaS Author Hand On&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#environments&quot; id=&quot;markdown-toc-environments&quot;&gt;Environments&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#pipeline&quot; id=&quot;markdown-toc-pipeline&quot;&gt;Pipeline&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#aem-saas-pipelines-breakdown&quot; id=&quot;markdown-toc-aem-saas-pipelines-breakdown&quot;&gt;AEM SaaS Pipelines Breakdown&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#validation&quot; id=&quot;markdown-toc-validation&quot;&gt;Validation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#build--unit-testing&quot; id=&quot;markdown-toc-build--unit-testing&quot;&gt;Build &amp;amp; Unit Testing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-scanning&quot; id=&quot;markdown-toc-code-scanning&quot;&gt;Code Scanning&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#build-images&quot; id=&quot;markdown-toc-build-images&quot;&gt;Build Images&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#deploy-to-dev&quot; id=&quot;markdown-toc-deploy-to-dev&quot;&gt;Deploy to Dev&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#aem-saas-pipelines-whats-missing&quot; id=&quot;markdown-toc-aem-saas-pipelines-whats-missing&quot;&gt;AEM SaaS Pipelines What‚Äôs missing&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#git-peer-review-workflow&quot; id=&quot;markdown-toc-git-peer-review-workflow&quot;&gt;Git Peer Review Workflow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#automated-functional-testing&quot; id=&quot;markdown-toc-automated-functional-testing&quot;&gt;Automated Functional testing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#no-git-lfs&quot; id=&quot;markdown-toc-no-git-lfs&quot;&gt;No Git LFS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#no-felix-console&quot; id=&quot;markdown-toc-no-felix-console&quot;&gt;No Felix Console&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot; id=&quot;markdown-toc-conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;/nav&gt;
&lt;/aside&gt;
&lt;/div&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;If &lt;a href=&quot;/blog/2019/10/20/enter-the-github-actions&quot;&gt;Github Actions&lt;/a&gt; was entry into End Game, latest Adobe AEM SaaS offering is the outcome of an End Game in another dimension, where Adobe is the clear victor! This stealthy engineering masterpiece is a true example of how great experience can provide so much, that words can‚Äôt describe the feeling.&lt;/p&gt;

&lt;p&gt;Adobes new offering it‚Äôs a true testament to engineering and a huge demonstration to all vendors in this space, on how to do things that make a difference. Not often you get your hands on a piece of SaaS software where you open the console and see something that takes your breath away. Your world is turned, and you whisper to yourself this can‚Äôt be true, it can‚Äôt be that easy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Well folk, it is!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Latest offering from Adobe demonstrates their commitment on Experiences and not only for End Users but also for Developers.&lt;/p&gt;

&lt;p&gt;This new offering is the Kubernetes powered, container infused, sling application building behemoth, breathing CI/CD life into your projects with ease!&lt;/p&gt;

&lt;p&gt;You can find plenty post and materials about tech behind the platform, but this post is about the Experience! We want to see show off the new Cloud Manager experience. This post should provide you with inspiration to jump onto the CI/CD experience that Adobe have gifted upon us!&lt;/p&gt;

&lt;p&gt;So, without any further ado let‚Äôs jump straight to it.&lt;/p&gt;

&lt;h1 id=&quot;aem-saas-author-hand-on&quot;&gt;AEM SaaS Author Hand On&lt;/h1&gt;

&lt;p&gt;To start playing with your Cloud Manager experience you will need to access it thought your Adobe Experience portal, this will be provided for you by Adobe but for now you can follow our blog to get the insight and prepare you to roll-out your first project.&lt;/p&gt;

&lt;p&gt;First off you need to login to Adobe Experience Platform, this will allow you not only to login into AEC using your Adobe account but also provides same access to all AEM instances in the Cloud Manager! Which is amazing and so on SSO trend of 2020! Login screen is similar to the all of the login screens Adobe has been slowly introducing in last few years.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/1-login.png&quot; alt=&quot;Adobe SSO Login Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can still use shared local admin accounts (you get one you share with Adobe) but it‚Äôs not something you should do in AEC and at all, for many painful reasons.&lt;/p&gt;

&lt;p&gt;Once you have logged in you will be redirected to the AEC dashboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/2-adobe-experience-cloud-overview.png&quot; alt=&quot;AEM Adobe Experience Cloud Dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you click the Experience Manager icon you should see Cloud Manager card with Launch link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/2-adobe-experience-cloud-ams-cloudmanager.png&quot; alt=&quot;AEM Adobe Experience Cloud Manager Launch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking Launch on Cloud Manager card will lead you at AEC Program Overview page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/4-aec-program-console.png&quot; alt=&quot;AEC - Cloud Manager - Program Overview &quot; /&gt;&lt;/p&gt;

&lt;p&gt;This console is your command centre for your environments and associated pipelines. From here you can control your environments, download logs, create and action pipelines. From now on this is the engine of your project!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/5-aec-program-console-manage.png&quot; alt=&quot;AEC - Cloud Manager - Environments&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First thing you will notice is the large banner across the top, this is your production status panel, it will report to you how your Production pipeline is going.&lt;/p&gt;

&lt;p&gt;Just under that you will see two sections Environments and Pipelines.&lt;/p&gt;

&lt;h2 id=&quot;environments&quot;&gt;Environments&lt;/h2&gt;

&lt;p&gt;Environments section allow you to check status of your environments, update and create new environments, download environment logs, access new environments, all of the features readily available and tucked away in the ellipsis (&lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;/code&gt;) revealing a simple menu with only but primary experiences you are looking for. Additionally, when you click the Details button in this section you will be taken to a details screen that will show you&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/4-aec-program-console-environments-details.png&quot; alt=&quot;AEC - Cloud Manager - Environments Details&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Available Configuration is tied to your account and point allocated for environments. You will only be able to have environments that have been assigned to you by Adobe. Spinning up and tearing down of the environments is as simple as clicking a submenu item on the environment.&lt;/p&gt;

&lt;h2 id=&quot;pipeline&quot;&gt;Pipeline&lt;/h2&gt;

&lt;p&gt;Pipeline section allow you to create, update and run pipelines and this is broken down into Production and Non-Production. Manage Git button shows you a dialog that points you to the Adobe Git repo you will need to use when committing code.&lt;/p&gt;

&lt;p&gt;Although environments will be your initial focus it will very quickly switch to the Pipelines which you will spend most of your time watching. üòç&lt;/p&gt;

&lt;p&gt;So, let‚Äôs deep dive on the pipeline and what we can decipher from it‚Äôs logs.&lt;/p&gt;

&lt;h1 id=&quot;aem-saas-pipelines-breakdown&quot;&gt;AEM SaaS Pipelines Breakdown&lt;/h1&gt;

&lt;p&gt;Adobe pipeline offer is simple, it provides a dream pipeline process where you start with Adobe hosted Git Repo and fork into Quality or Deploy pipeline process.&lt;/p&gt;

&lt;p&gt;This is a simple methodology and it seem to work as it saves a bunch of time on a project. All the team need to do is just get their code into the repo and everything is done for them, that has not existed with this ease until now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/7-aec-program-non-prod-pipeline-execution-complete.png&quot; alt=&quot;AEM Saas Program Console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can tell from the image the pipeline is divided into following stages&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Validation - initial verify of your repo?&lt;/li&gt;
  &lt;li&gt;Build &amp;amp; Unit Testing - maven build and test&lt;/li&gt;
  &lt;li&gt;Code Scanning - SonarQube evaluation&lt;/li&gt;
  &lt;li&gt;Build Images - Docker and Sling app build process&lt;/li&gt;
  &lt;li&gt;Deploy to Dev - Docker release and package install&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is similar process for PROD but with extra testing and approval steps.&lt;/p&gt;

&lt;p&gt;As you can see the Non-Prod Deploy pipeline breakdown is simple so now let‚Äôs look what is happening under covers, let‚Äôs talk about notable things that can be observed from the logs.&lt;/p&gt;

&lt;h2 id=&quot;validation&quot;&gt;Validation&lt;/h2&gt;
&lt;p&gt;No logs available for this but ‚ÄúYour Pipeline has been verified against a set of sanity checks.‚Äù could mean a lot of things, but it runs very fast so guessing it‚Äôs aim is just to check you have a Git repo with valid pom.xml that could be compiled, that could be a good start.&lt;/p&gt;

&lt;p&gt;This step takes about 5min to run from our tests.&lt;/p&gt;

&lt;h2 id=&quot;build--unit-testing&quot;&gt;Build &amp;amp; Unit Testing&lt;/h2&gt;

&lt;p&gt;In ‚Äúbuild_maven_build.log‚Äù you can see &lt;code class=&quot;highlighter-rouge&quot;&gt;[BUILD] Running maven build command(s)&lt;/code&gt; line and judging by what happens after that simple &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn package&lt;/code&gt; command is used as it compiles, tests and packages all modules in you project.&lt;/p&gt;

&lt;p&gt;This step runs for about 5min and it would depend on your package and test content. It‚Äôs not clear from the logs if the artifacts are cached at this step or after code scan.&lt;/p&gt;

&lt;h2 id=&quot;code-scanning&quot;&gt;Code Scanning&lt;/h2&gt;

&lt;p&gt;This is where magic is starting to come into play. First of you get a nice review summary screen that shows you what the damage of your latest code cram, and it‚Äôs cool way of summarising underlying tools!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/7-aec-program-non-prod-pipeline-execution-complete-codescan.png&quot; alt=&quot;AEM Saas Pipleine CodeScan Result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In addition to this you get to see a CSV that shows you things that you need to fix.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;File Location&lt;/th&gt;
      &lt;th&gt;Line Number&lt;/th&gt;
      &lt;th&gt;Issue&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Severity&lt;/th&gt;
      &lt;th&gt;Effort&lt;/th&gt;
      &lt;th&gt;Rule&lt;/th&gt;
      &lt;th&gt;Tags&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/install is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/components/template/cloudconfig/addthisconnect/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/components/lists/searchlist/v2/searchlist/cq:dialog/content/items/layoutTab/items/column/items/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/global/dialog/touch/badge/content/items/badgeConfigTab/items/column/items/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/components/template/cloudconfig/googleanalytics/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/components/media/image/v2/image/cq:editConfig/cq:inplaceEditing/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;design.aem:aemdesign-aem-common:2.0.618&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Node /apps/aemdesign/components/template/cloudconfig/googlemap/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/td&gt;
      &lt;td&gt;Bug&lt;/td&gt;
      &lt;td&gt;Major&lt;/td&gt;
      &lt;td&gt;¬†&lt;/td&gt;
      &lt;td&gt;ConfigAndInstallShouldOnlyContainOsgiNodes&lt;/td&gt;
      &lt;td&gt;aem&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;em&gt;PS. this is the complete list of issues that we got for first deploy of AEM.Design to Adobe SaaS offering.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Just looking at this the reported Severity seems to be very opinionated and super conservative. Having a readme file in your &lt;code class=&quot;highlighter-rouge&quot;&gt;/apps/aemdesign/install&lt;/code&gt; folder does not make it a Major defect, but this it probably just splitting hairs at this point and removing that file is trivial.&lt;/p&gt;

&lt;p&gt;Errors such as &lt;code class=&quot;highlighter-rouge&quot;&gt;/apps/aemdesign/components/template/cloudconfig/addthisconnect/config is an OSGi config or install path which contains non-OSGi-related children that will not be visible to non-administrative users.&lt;/code&gt; seem to fail the blank &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt; node name rule and yes this is Major once again.&lt;/p&gt;

&lt;p&gt;These trivial issues will get some great solution in time as this is a great process to put in place for all AEM project from the start. Many AEM project will benefit from establishing initial baseline and would provide a clear for quality path.&lt;/p&gt;

&lt;p&gt;This step takes about 5min to run, this would depend on amount of code you throw at it.&lt;/p&gt;

&lt;h2 id=&quot;build-images&quot;&gt;Build Images&lt;/h2&gt;

&lt;p&gt;This phase is responsible for generating two brand new Docker images that has all of your new code embedded into it. First image will contain all of your project contents and second image will be a final merged version of your project with latest AEM base image.&lt;/p&gt;

&lt;p&gt;Essentially process builds a custom CRX-Quickstart with your features(converted packages) embedded into it from the start, this does mean that you will not be able to download or delete the packages using CRX/DE and with added benefit of separating these code package from actual content in your repository.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/11-aem-saas-crxde-packages.png&quot; alt=&quot;AEM Saas CRX/DE Packages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The logs show standard Docker build process with bunch of parameters being passed to the Docker build process. Namely the build process relies on Packages that were built in previous steps these are passed as a URL list which are downloaded and converted to &lt;a href=&quot;https://github.com/apache/sling-org-apache-sling-feature&quot;&gt;Sling Features&lt;/a&gt; using tool similar to &lt;a href=&quot;https://github.com/apache/sling-org-apache-sling-feature-cpconverter&quot;&gt;sling-org-apache-sling-feature-cpconverter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The process also creates a list of packages that are have content to be installed into repository, this list is used in deploy step.&lt;/p&gt;

&lt;p&gt;All the packages once converted get store into &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main/features/generated-author&lt;/code&gt; with relevant JSON files describing features in &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main/features/generated/001_sew-aem-common.json&lt;/code&gt;. After this a maven build process is executed to compile your features into latest version (at the time of writing 6.6.0-V17414) of AEM Quickstart. Adobe has indicated that they are moving towards daily releases so this means that this process will pick up latest version of AEM when it‚Äôs available.&lt;/p&gt;

&lt;p&gt;After this conversion and merger of AEM sling features, AEM image is started as container to initialise it‚Äôs segment store. Once the instance is initialising it‚Äôs stopped and Apache Jackrabbit Oak maintenance is executed, first checkpoint then compact. Once this is done both docker images are uploaded to Adobes Docker Image Repository. And this same process repeats for Publish images changing runmode=publish in the process.  At the end of this process which takes around 10-15 min to run you end up with Author and Publish images sizing at 4GB each.&lt;/p&gt;

&lt;h2 id=&quot;deploy-to-dev&quot;&gt;Deploy to Dev&lt;/h2&gt;

&lt;p&gt;Deploy phase starts with downloading content packages that were isolated in previous phase. Followed by starting and waiting for Author instance, at which is tries to install downloaded packages into the instance and stop the instance on completion.&lt;/p&gt;

&lt;p&gt;After this next process start the author and runs a bunch of bash scripts, that enable features, nodestore, blobstore, logging, set admin password validate and link license key. After this AEM is started once again and once ready is stopped and Oak Indexes are regenerated.&lt;/p&gt;

&lt;p&gt;After this 10+ min step that instance is started again and marked as available for use, which is not recoded in logs and must be an extra step outside of the pipeline.&lt;/p&gt;

&lt;p&gt;As you can see this is straight forward pipeline that just works. Lets discuss the obvious question that is at the top our mind right about now. What‚Äôs missing?&lt;/p&gt;

&lt;h1 id=&quot;aem-saas-pipelines-whats-missing&quot;&gt;AEM SaaS Pipelines What‚Äôs missing&lt;/h1&gt;

&lt;p&gt;Well as this is hosted on AEM there will be a few CI/CD limitations. Limitations are good as they provide less distraction and an opportunity to improve. Here are the things that we find missing so far, they are not deal breakers but good to keep on the back of your mind.&lt;/p&gt;

&lt;h2 id=&quot;git-peer-review-workflow&quot;&gt;Git Peer Review Workflow&lt;/h2&gt;

&lt;p&gt;Adobe Git is only a URL to which you push your code, these days all development should revolve around Pull Request Approval process. Covering benefits of this is not required as they are covered in great depth in many articles.&lt;/p&gt;

&lt;p&gt;To enable this process to happen on your projects you will need to use external Git repo and manage code reviews there before you publish this final code into Adobe Git.&lt;/p&gt;

&lt;p&gt;This is a small inconvenience and it‚Äôs readily fixed seeing as all companies these days have a form of Git and in cases where that‚Äôs not the case, GitHub, Bitbucket and Gitlab all support this process for free. Additionally, these tools have built in pipeline tools that will help you to push code to Adobe Git.&lt;/p&gt;

&lt;h2 id=&quot;automated-functional-testing&quot;&gt;Automated Functional testing&lt;/h2&gt;

&lt;p&gt;Screenshot testing using Selenium or other testing tools is not in and you would need to cater for that yourselves. Most obvious reason for this as there is no one way of doing this and everyone does what they need for their situation.&lt;/p&gt;

&lt;p&gt;Additionally, current Deploy pipelines are fixed to a specific flow which you cannot change. This means that in cases where you need to do automated functional testing you would need to do this using external pipeline.&lt;/p&gt;

&lt;p&gt;Potentially you could just run your automation test tool of choice manually against a Dev instance in the Adobe environment. But in cases where you would like this to be automated you would have followed another approach.&lt;/p&gt;

&lt;p&gt;One approach could be is to still have external Git repo and a pipeline that could build and test code and on success push it to Adobe Git for release to Dev cycle. This would be an ok mechanism as you could do this free on GitHub using containers see &lt;a href=&quot;https://aem-design.github.io/aemdesign-aem-support-output/&quot;&gt;Exhibit 1&lt;/a&gt; that runs in GitHub Actions pipeline. Plus, you would get PR ability.&lt;/p&gt;

&lt;h2 id=&quot;no-git-lfs&quot;&gt;No Git LFS&lt;/h2&gt;

&lt;p&gt;If you are using Git Lfs you going to need to revert to plain git as there is not Git Lfs in Adobe‚Äôs Git and you will end up publishing pointers to your images into AEM.&lt;/p&gt;

&lt;h2 id=&quot;no-felix-console&quot;&gt;No Felix Console&lt;/h2&gt;

&lt;p&gt;There is no Felix Console, but there is a brand-new custom Developers Console that provides very limited tools that you might use.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/adobe-aec/12-developer-console-status.png&quot; alt=&quot;AEM New Developer Console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Standard Felix console does have a lot of features and some can cause a few issues so it‚Äôs no surprise it‚Äôs not available and have been replaced with a tool that allows you download that for review.&lt;/p&gt;

&lt;p&gt;Here are some of the available screens, Status screen will be your main go-to console to download content of some frequently used Felix console.&lt;/p&gt;

&lt;style&gt;
    .image-gallery {overflow: auto; margin-left: -1%!important;}
    .image-gallery li {float: left; display: block; margin: 0 0 1% 1%; width: 19%;}
    .image-gallery li a {text-align: center; text-decoration: none!important; color: #777;}
    .image-gallery li a span {display: block; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; padding: 3px 0;}
    .image-gallery li a img {width: 100%; display: block;}
&lt;/style&gt;

&lt;ul class=&quot;image-gallery&quot;&gt;
    &lt;li&gt;
        &lt;a href=&quot;/assets/images/adobe-aec/developerconsole/12-developer-console-java-packages.png&quot; title=&quot;12-developer-console-java-packages&quot;&gt;&lt;img src=&quot;//images.weserv.nl/?url=aem.design/assets/images/adobe-aec/developerconsole/12-developer-console-java-packages.png&amp;amp;w=300&amp;amp;h=300&amp;amp;output=png&amp;amp;q=50&amp;amp;t=square&quot; alt=&quot;12-developer-console-java-packages&quot; title=&quot;12-developer-console-java-packages&quot; /&gt;&lt;span&gt;12-developer-console-java-packages&lt;/span&gt;&lt;/a&gt;
    &lt;/li&gt;

    &lt;li&gt;
        &lt;a href=&quot;/assets/images/adobe-aec/developerconsole/12-developer-console-queries.png&quot; title=&quot;12-developer-console-queries&quot;&gt;&lt;img src=&quot;//images.weserv.nl/?url=aem.design/assets/images/adobe-aec/developerconsole/12-developer-console-queries.png&amp;amp;w=300&amp;amp;h=300&amp;amp;output=png&amp;amp;q=50&amp;amp;t=square&quot; alt=&quot;12-developer-console-queries&quot; title=&quot;12-developer-console-queries&quot; /&gt;&lt;span&gt;12-developer-console-queries&lt;/span&gt;&lt;/a&gt;
    &lt;/li&gt;

    &lt;li&gt;
        &lt;a href=&quot;/assets/images/adobe-aec/developerconsole/12-developer-console-servlets.png&quot; title=&quot;12-developer-console-servlets&quot;&gt;&lt;img src=&quot;//images.weserv.nl/?url=aem.design/assets/images/adobe-aec/developerconsole/12-developer-console-servlets.png&amp;amp;w=300&amp;amp;h=300&amp;amp;output=png&amp;amp;q=50&amp;amp;t=square&quot; alt=&quot;12-developer-console-servlets&quot; title=&quot;12-developer-console-servlets&quot; /&gt;&lt;span&gt;12-developer-console-servlets&lt;/span&gt;&lt;/a&gt;
    &lt;/li&gt;

    &lt;li&gt;
        &lt;a href=&quot;/assets/images/adobe-aec/developerconsole/12-developer-console-status-download-logs.png&quot; title=&quot;12-developer-console-status-download-logs&quot;&gt;&lt;img src=&quot;//images.weserv.nl/?url=aem.design/assets/images/adobe-aec/developerconsole/12-developer-console-status-download-logs.png&amp;amp;w=300&amp;amp;h=300&amp;amp;output=png&amp;amp;q=50&amp;amp;t=square&quot; alt=&quot;12-developer-console-status-download-logs&quot; title=&quot;12-developer-console-status-download-logs&quot; /&gt;&lt;span&gt;12-developer-console-status-download-logs&lt;/span&gt;&lt;/a&gt;
    &lt;/li&gt;

&lt;/ul&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;As this is an Adobe‚Äôs work in progress and the masterpiece is not finished yet, it‚Äôs expected that new features will be added as adoption grows.&lt;/p&gt;

&lt;p&gt;It will not take you long to get used to all the options and you will soon be longing for this simplicity in everything. Alternatives experiences to this are far more complicated and although they are fun to create, they can divert your attention and that you need not to do anymore!&lt;/p&gt;

&lt;p&gt;From development perspective there are a lot of features that you will not see migrated which is a good thing, as Adobe‚Äôs engineers have a good handle on what is used and it‚Äôs usefulness beyond just being there part of a legacy.&lt;/p&gt;

&lt;p&gt;So, we hope you have had just enough content to give you a quick overview and excite you to jump on board.&lt;/p&gt;

&lt;p&gt;There is a whole array of documentation available at your favourite site in the &lt;a href=&quot;https://docs.adobe.com/content/help/en/experience-manager-cloud-manager/using/introduction-to-cloud-manager.html&quot;&gt;Experience Manager Cloud Manager Help&lt;/a&gt; section, explore the new capability that is at your disposal and review official docs if you get stuck.&lt;/p&gt;

&lt;p&gt;As always if you want more drop us a line, checkout the code and submit some issues if you find any.&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="saas" /><category term="knowledge" /><category term="sharing" /><category term="handson" /><summary type="html">This is the End Game and Adobe has it, a non-definitive perspective!</summary></entry><entry><title type="html">AEM Framework for Multi-Tenant Environments.</title><link href="https://aem.design/blog/2020/01/12/aem-framework-for-multi-tenant-environments" rel="alternate" type="text/html" title="AEM Framework for Multi-Tenant Environments." /><published>2020-01-12T00:37:00+00:00</published><updated>2020-01-12T00:37:00+00:00</updated><id>https://aem.design/blog/2020/01/12/aem-framework-for-multi-tenant-environments</id><content type="html" xml:base="https://aem.design/blog/2020/01/12/aem-framework-for-multi-tenant-environments">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;AEM.Design is about identifying best practices and patterns that should be embedded and used a starting point for creating solutions for AEM. Our approach is to combine these best practices and patterns into the open source framework that can accelerate projects and provide a pathway for sharing knowledge with community in a consumable production ready framework. A lot of articles detail individual knowledge fragments that at times useful on their own but do not provide a clear direction for end use. We have tried to create a consolidated reference end-to-end approach with AEM.design framework and tools.&lt;/p&gt;

&lt;p&gt;This initiative aims at collating best practices and patterns that are proven to be useful on projects. It‚Äôs aim to leverage best practices not only from AEM knowledge base, but also leverage best of the best from Front End, Automation Testing, DevOps and other related enablement tech. The aim of this initiative to provide a framework that can fit into existing solution practices without mandating a particular process.&lt;/p&gt;

&lt;p&gt;All of the code is located in github, Docker Hub, SonarCloud and published to Maven central.&lt;/p&gt;

&lt;p&gt;Best place to start with this framework is to try out the Docker Bundle that has the framework and demo of all of the components. You can find how to get started here: https://aem.design/blog/2019/08/30/docker-aem-bundle&lt;/p&gt;

&lt;p&gt;Our archetype project is aimed to generate a new tenant project that has all of the components required to run AEM implementation project. It including automation tests, site showcase, frontend code implementation and component overrides tailored to you tenant name and project.&lt;/p&gt;

&lt;p&gt;If you have any questions on particular issues you can raise issues in github for repos there are a few of them.&lt;/p&gt;

&lt;p&gt;Creating and managing am environment for Multi-Tenants requires considerable upfront planning. Starting AEM project is easy and you can feel great sense of velocity early on. Although your initial velocity will make you feel comfortable, this might not last and avoiding future pitfalls is hard once you have released to production. To avoid pitfalls of the future means that you will need to be aware of some of the pitfalls you might encounter up front and this is very hard to convey and predict.&lt;/p&gt;

&lt;p&gt;To protect projects from encountering technical pitfalls in the future it‚Äôs recommended to follow number of product best practices. Sheer number of best practices and patterns is overwhelming and it‚Äôs very hard for new entrants to appreciate all of the suggested practices. We found that establishing a set of goals and principles early on help to provide a project a pathway to success.&lt;/p&gt;

&lt;p&gt;Technical patterns are easily avoided by leveraging frameworks that seek to embed knowledge into usable framework. Providing input into business processes is a more complicated endeavors due to the way project can be executed. From our experience teams need to aim to establish a common design language which is used to communicate requirements, and establish a efficient delivery processes that builds trust in the tools being used. This requires having open dialog at the start of the project to ensure everyone is on the same page and are willing to commit to trust automation process.&lt;/p&gt;

&lt;p&gt;Following sections outline some of the elements of knowledge that should be kept in mind when establishing project for single site or multi tenant sites.&lt;/p&gt;

&lt;h1 id=&quot;business-approach&quot;&gt;Business approach&lt;/h1&gt;

&lt;p&gt;Be very transparent with whole team, every person needs to understand that they will all be required to login into AEM and use it, PMs and steak holders included, after all its their future digital platform. Everyone must to learn basic terminology of AEM and Design Language that will be used to describe requirements, this avoid confusion for everyone, and everyone should be encouraging peers to use correct language.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Select primary Business Analyst to run project knowledge transfer, this will be you primary conduit&lt;/li&gt;
  &lt;li&gt;Project team focus is primarily on Authoring Experience, as this what will enable authors to create the visual experiences they want&lt;/li&gt;
  &lt;li&gt;Create a common Design Language to ensure designers and BA‚Äôs lead the conversation of explaining how designs are authored in AEM, not in some other external concepts&lt;/li&gt;
  &lt;li&gt;Establish a religious training for all end users of AEM&lt;/li&gt;
  &lt;li&gt;Create a showcase of you chosen components and walk everyone (including stake holders) thought it, showcase must be used for functional tests, so it‚Äôs not a throw away&lt;/li&gt;
  &lt;li&gt;Establish a common knowledge repository for sharing knowledge while AEM project is running, use Confluence as it‚Äôs most accessible, do not treat this knowledge base as a dumping ground of notes, treat it like a knowledge book for the future. This space is for people to see what you have built not read endless meeting notes, all admin related content should not be primary focus for the space&lt;/li&gt;
  &lt;li&gt;Establish a author training site that will be updated by Authors and BAs, this should be like any other tenant&lt;/li&gt;
  &lt;li&gt;Delay all modification to core Authoring Experience, use YAGNI banner especially if everyone is new to AEM&lt;/li&gt;
  &lt;li&gt;Component that appears in multiples experiences(pages) and show same data structure but different visual presentation are variant of same component.&lt;/li&gt;
  &lt;li&gt;Focus on identifying Unique Experiences and Unique components Variants that make up those Unique Experiences.&lt;/li&gt;
  &lt;li&gt;Ensure analytics is discussed as Definition of Ready for each component.&lt;/li&gt;
  &lt;li&gt;Focus on content taxonomies to ensure content structure can scale from the start in DAM, Content Fragments, Experience Fragments, Tags, Forms and Site Pages. Each site should be in its own tenant folder with additional contextual segmentation that   should apply for each type of content.&lt;/li&gt;
  &lt;li&gt;Site Content must always be in Region/Language structure with primary Country and Language as default, essentially your site must be multi languish compatible from the start.&lt;/li&gt;
  &lt;li&gt;Do not let Information Architecture dictate site Content Architecture&lt;/li&gt;
  &lt;li&gt;All legacy SEO ideas and practices (anything that does not talk about micro data in page and components) should be tested using Functional Tests using the Build in AEM Hobes framework, this allows authors to test their content when they create it. If it can‚Äôt be automatically tested it‚Äôs not a requirement, it‚Äôs 2020 excuses don‚Äôt apply drop that requirement if it does.&lt;/li&gt;
  &lt;li&gt;Acceptance Criteria and Acceptance tests must be part of Definition of Ready for DEV&lt;/li&gt;
  &lt;li&gt;Automation testing is not optional and it‚Äôs the only way to verify Definition of Ready.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;technology-approach&quot;&gt;Technology Approach&lt;/h1&gt;

&lt;p&gt;For single and Multi Tenant Projects consider that each site is a ‚Äútenant‚Äù not a sling workspace tenant but more of a virtual tenant used to segregate content from each site. This additional provides a method for security policies to be applied as users create content, as well as provide clean separation of content and application code if required, especially as you are working of a single component codebase.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a showcase with you chosen components which is maintained Developers throughout development and Testers when helping to test&lt;/li&gt;
  &lt;li&gt;Focus on Functional Automation Testing for all components with Authoring (does dialog work), Publishing (does it interact in publish) and Screenshot (does it look right) perspectives. Automation test suit is for the team not for selected few it does not have to be pretty is need to be quick to adopt and allow testing other web services, Selenium still works.&lt;/li&gt;
  &lt;li&gt;Leverage Docker containers to ensure you are running consistent versions of services across all environments and especially Developers desktops, see Operations/Docker project&lt;/li&gt;
  &lt;li&gt;Run AEM with Segment and Datastore separates from the start&lt;/li&gt;
  &lt;li&gt;Leverage external ESB tool for API dev, eg ApacheNifi, try not to write API‚Äôs in AEM, external API tools can template/translate requests into direct Sling API request.&lt;/li&gt;
  &lt;li&gt;Offload processing to Kubernetes container farm to leverage containers.&lt;/li&gt;
  &lt;li&gt;Use overlays for each component per each site, as you will be using multiple framework eventually, this will allow you so substitute/update components in the future.&lt;/li&gt;
  &lt;li&gt;Segregate each individual site content into ‚Äútenant‚Äù like silos&lt;/li&gt;
  &lt;li&gt;Ensure Pipelines for build and deploy are established as soon as git and repos are created.&lt;/li&gt;
  &lt;li&gt;Ensure dispatchers and present for Author and Publish instances&lt;/li&gt;
  &lt;li&gt;Ensure that Frontend code is package as a stand-alone package and Page Client Libs are used to include in Templates, see Support/Compose module.&lt;/li&gt;
  &lt;li&gt;Leverage VLT tool to export and backup content from prod and import into Development environments as required, packages don‚Äôt work for large content farms&lt;/li&gt;
  &lt;li&gt;Leverage Ansible to persists logic for environment configuration, see Operations/Deploy and Operations/Ansible-Roles project.&lt;/li&gt;
  &lt;li&gt;Ensure dispatcher config is in code and in a Docker container, see Docker-Dispatcher repo&lt;/li&gt;
  &lt;li&gt;Do not allow manual modification of services/servers via console etc follow Configuration as Code for all infrastructure and services, especially servers, preferably run Centos Atomic edition which will force Docker usage, see Operations/VM project for how to generate Centos Atomic VMs appliances.&lt;/li&gt;
  &lt;li&gt;Leverage Content Fragments for structured content, use templated component to present that content.&lt;/li&gt;
  &lt;li&gt;Leverage Experience Fragments for building reusable Page Sections.&lt;/li&gt;
  &lt;li&gt;Do not build footer and header as massive components, instead create experience fragments and add them to Site Root page and inherit it thought the tree.&lt;/li&gt;
  &lt;li&gt;Ensure Analytics content can be updated by authors&lt;/li&gt;
  &lt;li&gt;Use Data Layer spec to output analytics content in page header&lt;/li&gt;
  &lt;li&gt;Use Data Layer spec to manage all fields that will be output by components and use for analytics&lt;/li&gt;
  &lt;li&gt;Do not implement any components that use any inline javascript for Analytics, not matter what.&lt;/li&gt;
  &lt;li&gt;Ensure each component has a unique ID attribute&lt;/li&gt;
  &lt;li&gt;Ensure each component you output is easily distinguishable from other stuff AEM adds, AEM.Design uses Boolean attribute ‚Äúcomponent‚Äù&lt;/li&gt;
  &lt;li&gt;Use lists for re-using content for presentation, look at Generic Details and List components for reference, they provide dynamic field specific templating and expose of component content without dumping all of the content on the page. Hiding 48 out of 50 fields of a component content is poor design, output only content you need, see Component Variant and List Badge patterns.&lt;/li&gt;
  &lt;li&gt;Separate config into separate package and use run-modes&lt;/li&gt;
  &lt;li&gt;Separate authoring experience updates into separate package&lt;/li&gt;
  &lt;li&gt;Use ACS commons tools and check them before you build new components.&lt;/li&gt;
  &lt;li&gt;When using components from frameworks consider impact on authoring experience, different frameworks have different authoring possibilities, with some making authoring very Front End heavy without enabling Authors.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a short list and can be use a starting point.&lt;/p&gt;

&lt;p&gt;As always if you think of things to be added to the list let us know by leaving a comment or better yet raise an issue in the repo.&lt;/p&gt;

&lt;p&gt;Share this on your favorite network if you find this useful.&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="knowledge" /><category term="sharing" /><category term="multi-tenant" /><category term="framework" /><summary type="html">Notes to get you started creating a Multi-Tenant Environments on AEM</summary></entry><entry><title type="html">Enter the Github Actions üòòüêôüöÄ</title><link href="https://aem.design/blog/2019/10/20/enter-the-github-actions%F0%9F%98%98%F0%9F%90%99%F0%9F%9A%80" rel="alternate" type="text/html" title="Enter the Github Actions üòòüêôüöÄ" /><published>2019-10-20T00:37:00+00:00</published><updated>2019-10-20T00:37:00+00:00</updated><id>https://aem.design/blog/2019/10/20/enter-the-github-actions</id><content type="html" xml:base="https://aem.design/blog/2019/10/20/enter-the-github-actions%F0%9F%98%98%F0%9F%90%99%F0%9F%9A%80">&lt;style&gt;
.page__hero--overlay p, .page__hero--overlay h1{
    background-color: rgba(23,168,23, 0.6);
    max-width: fit-content !important;
    border-radius: 25px;
    padding: 10px;
}
&lt;/style&gt;

&lt;p&gt;CI/CD space if going off like a bunch of emoji in a url! But one thing you can be sure is to kiss üòò your all-enveloping üêô pipeline tools good bye and put on your seat belt, as the pipeline mother-ship is taking off üöÄ!&lt;/p&gt;

&lt;p&gt;Travis, Gitlab, Jenkins, Azure DevOps, CircleCI, Codeship all of these and more are awesome pipeline tools! We use them daily, they do us proud of things that we can accomplish with effort alone in this virtual world of ours. They make us happy when we move our piplines from one provider to another by giving us latest YAML syntax. They make us happy when they give us badges that we wear with pride in our readme‚Äôs! They give us fancy plugins and cli tools that make us rewrite all of our pipelines over and over!&lt;/p&gt;

&lt;p&gt;But late night wrestling with CI tools does leave feelings of doubt deep in your mind, maybe this is not the end game. Yes pulling data across the oceans so that you can just build the code does seem ok and mirroring your repos to another build system so that your Git LFS quota does not get smashed is worthy battle. But you wonder should you need to do all that and is there a better way.&lt;/p&gt;

&lt;p&gt;We know that big things come from little things, so all the small battles with these awesome tools seem to be a built up to something big. All these battles helped us to figure out what we really need from these pipeline tools.&lt;/p&gt;

&lt;p&gt;And it seems that the ask is much firmer now after all the experimenting and it goes something like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I want my code to be in a place where everyone can get at it.&lt;/li&gt;
  &lt;li&gt;I want my code base to be respected by everyone&lt;/li&gt;
  &lt;li&gt;I want my pipeline to be right there with the code so that I dont need to worry about any smudges, submodules and other solvable unknowns.&lt;/li&gt;
  &lt;li&gt;I want this YAML config to be easy to understand and simple to follow, like Travis but with more YAML&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sure there is things to consider but for lets see where this takes us.&lt;/p&gt;

&lt;p&gt;Now to be clear Travis is #1 until you need to run something longer than 50min then is Azure DevOps at #2. Travis is simple and it give you exactly what you want and for free. Azure DevOps is the all in one package that you dream of, but you need to move your code from Github. ü§î&lt;/p&gt;

&lt;p&gt;Gitlab is awesome for a few years we have been running on it, running over quotas etc pain full but worth while experience right up to archiving all project and moving to github. Gitlab is a great one-stop-shop if you want to run on-prem, as there is Github and Azure in paid categories, that compete at different level.&lt;/p&gt;

&lt;p&gt;Github has become the defacto standard for open source projects. Yes Azure has tried to capture the market and its done a bloody great job and Gihub is now owned by Mirosoft, and we will see who will win the internal pageant in the end but there will always be open source favorite.&lt;/p&gt;

&lt;p&gt;But all of this really does not really matter for now, what matters is that Github announced and delivered on their promise to have pipelines built into their offering. This was a long throw of a spanner and it has been is slow motion for a year, but it landed and pressed the tak off button! And its looking good! Yes there are features missing, but it wont be long.&lt;/p&gt;

&lt;p&gt;Amazingly it seems that they copied some of the Azure DevOps pipeline components and have improved on them! This makes Github an absolute steal for open source project as its now one stop shop for all of your needs. It‚Äôs astonishing how much &lt;a href=&quot;https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions&quot;&gt;value this offers&lt;/a&gt; it leaves you with the thought what is the catch?! There aint none atm and I do hope they wont do Larry Ellison on us in a few years. Obviously people will just move to where there is more common sense.&lt;/p&gt;

&lt;p&gt;For now we have started to migrate all of our pipelines from Travis to Github Actions, so far it has been a very quick migration there are many guides how to migrate but if you know your pipelines its simpler to just get started!&lt;/p&gt;

&lt;h3 id=&quot;from-travis-to-github-actions---the-non-definitive-guide&quot;&gt;From Travis to Github Actions - the non definitive guide&lt;/h3&gt;

&lt;p&gt;To get started all you need to do is make &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/workflows/main.yml&lt;/code&gt; file in your project with following content:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CI&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;GLOBAL_VAR&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;i am global&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;SECRET_VAR&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.SECRET_VAR }}&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# set this in Github Repo -&amp;gt; Setting -&amp;gt; Secrets&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run a one-line script&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo Hello, world!&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run a multi-line script&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo Add other actions to build,&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo test, and deploy your project.&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run a one-line script with if&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;github.ref == 'refs/heads/master'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo Hello, world!&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;set step output and set some vars&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stepwithoutputs&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo ::set-env name=COOL_OUTPUT::HELLO THERE ENV&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo ::set-output name=COOL_OUTPUT::HELLO THERE OUTPUT&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dump some vars&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo STEP_OUTPUT_MAP=${STEP_OUTPUT_MAP}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo STEP_OUTPUT=${STEP_OUTPUT}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo STEP_SET_ENV_VAR=${STEP_SET_ENV_VAR}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo JOB_VAR=${JOB_VAR}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;STEP_OUTPUT_MAP&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ toJson(steps.stepwithoutputs.outputs) }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;STEP_OUTPUT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ steps.stepwithoutputs.outputs.COOL_OUTPUT }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;STEP_SET_ENV_VAR&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.COOL_OUTPUT }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;JOB_VAR&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.SECRET_VAR }}&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meeDamian/github-release@1.0&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GITHUB_TAG }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GITHUB_TAG }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GIT_RELEASE_NOTES }}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here you can see common items that you could use in your simple pipeline, its a good start for converting your pipelines.&lt;/p&gt;

&lt;p&gt;Then you can go ahead and replace steps with the ones you have in your travis file. Here are some how to notes on things that you will need to know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name:&lt;/code&gt; at the top is the ID of action so keep that short.&lt;/li&gt;
  &lt;li&gt;unlike Travis there is &lt;code class=&quot;highlighter-rouge&quot;&gt;jobs/&amp;lt;job_id&amp;gt;&lt;/code&gt; layout where you can separate your flow if you need, initially having everything in one job is easiest, you can refactor once you have more requirements.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;uses&lt;/code&gt; mean using another pre made action from marketplace, you pass parameters to actions using &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;you can use bash variables in &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; steps but you need to use ‚ÄúContext Expression‚Äù when doing it on other YAML attributes such &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;when&lt;/code&gt; or passing variables to things.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; is added directly to step YAML and you use Context Expressions to evaluate your logic, ex check if current branch is master: &lt;code class=&quot;highlighter-rouge&quot;&gt;if: github.ref == 'refs/heads/master'&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;to &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt; a variable to environment you need to do following echo command format &lt;code class=&quot;highlighter-rouge&quot;&gt;echo ::set-env name={name}::{value}&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;you can also set step outputs &lt;code class=&quot;highlighter-rouge&quot;&gt;::set-output name={name}::{value}&lt;/code&gt; that allow you to reference this step it in Context Expression &lt;code class=&quot;highlighter-rouge&quot;&gt;steps.&amp;lt;step_id&amp;gt;.outputs.&amp;lt;variable&amp;gt;&lt;/code&gt; this separates global from step variables.&lt;/li&gt;
  &lt;li&gt;to use &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; variables in &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; steps you can just do &lt;code class=&quot;highlighter-rouge&quot;&gt;${DOCKER_REGISTRY}&lt;/code&gt; this will evaluate the variable as bash variable.&lt;/li&gt;
  &lt;li&gt;to use &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; in YAML parts such as &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; etc you need to use Content Expressions &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; this will evaluate the variable as bash variable.&lt;/li&gt;
  &lt;li&gt;to pass secrets to steps or use them in &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; variables use the Content Expression &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;check Awesome List of Must Have Actions in your Pipeline](https://github.com/sdras/awesome-actions) for custom actions that will replace comparable Travis actions, example &lt;a href=&quot;https://github.com/marketplace/actions/github-release-create-update-and-upload-assets&quot;&gt;meeDamian/github-release@1.0&lt;/a&gt; replaces Travis &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt; step.&lt;/li&gt;
  &lt;li&gt;caching is not there yet but will be available in November 2019.&lt;/li&gt;
  &lt;li&gt;you can use Build Matrix see &lt;a href=&quot;https://help.github.com/en/articles/workflow-syntax-for-github-actions&quot;&gt;Github Actions YAML Syntax&lt;/a&gt; for more info&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following is a list of resource you should use to learn about syntax before you stat googling.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/automating-your-workflow-with-github-actions/metadata-syntax-for-github-actions&quot;&gt;YAML Syntax&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/workflow-syntax-for-github-actions&quot;&gt;Github Actions YAML Syntax&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/automating-your-workflow-with-github-actions/development-tools-for-github-actions&quot;&gt;Setting Variables&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/virtual-environments-for-github-actions&quot;&gt;Global Variables and Secrets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions&quot;&gt;Context Expression and Global Context&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sdras/awesome-actions&quot;&gt;Awesome List of Must Have Actions in your Pipeline&lt;/a&gt; - check this before googling&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.community/t5/GitHub-Actions/bd-p/actions&quot;&gt;Github Actions Forum&lt;/a&gt; - search here before googling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For better comparison here is an actual &lt;a href=&quot;https://github.com/aem-design/docker-toughday/blob/master/.travis.yml&quot;&gt;Travis pipeline&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;java&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tag is blank&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;docker'&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PACKAGE_PATH=&quot;$(pwd)/packages&quot;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$PACKAGE_PATH&lt;/span&gt;


&lt;span class=&quot;na&quot;&gt;before_install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;(curl&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-sL&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_config.sh)&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo GET PACKAGES&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo $PACKAGE_PATH&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ ! -d $PACKAGE_PATH ]]; then mkdir $PACKAGE_PATH; fi&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo PACKAGES CONTENTS $PACKAGE_PATH&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ls -latr $PACKAGE_PATH&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo DOWNLOAD PACKAGES INTO ${PACKAGE_PATH}&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://helpx.adobe.com/experience-manager/6-2/sites/developing/using/tough-day/_jcr_content/main-pars/download-section/download-1/file.res/toughday-6.1.jar&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://repo.adobe.com/nexus/content/repositories/releases/com/adobe/qe/toughday2/0.9.2/toughday2-0.9.2.jar&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://repo.adobe.com/nexus/content/repositories/releases/com/adobe/qe/toughday2/0.2.1/toughday2-0.2.1.jar&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ls -latr $PACKAGE_PATH&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;(curl&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-sL&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://github.com/aem-design/aemdesign-docker/releases/latest/download/get_version.sh)&quot;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;#build and test&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker build --pull -t $IMAGE:$IMAGE_VERSION .&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;export CONTAINER_COMMAND=&quot;docker run $IMAGE:$IMAGE_VERSION $TEST_COMMAND&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo CONTAINER_COMMAND=$CONTAINER_COMMAND&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;export CONTAINER_OUTPUT=$(eval $CONTAINER_COMMAND)&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo CONTAINER_OUTPUT=$CONTAINER_OUTPUT&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ ! ${CONTAINER_OUTPUT} =~ ${TEST_COMMAND_VERIFY} ]]; then travis_terminate 1; fi&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker images&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#test&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;LOGIN TO HUB.DOCKER&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;PUSH HUB.DOCKER&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker push $IMAGE:$IMAGE_VERSION&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ $TRAVIS_BRANCH == &quot;master&quot; ]]; then docker tag $IMAGE:$IMAGE_VERSION $IMAGE:latest &amp;amp;&amp;amp; docker push $IMAGE:latest; fi&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;UPDATE README IN HUB.DOCKER&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ $TRAVIS_BRANCH == &quot;master&quot; ]]; then docker run --rm -v $(pwd):/data/ aemdesign/dockerhub-description &quot;$DOCKER_USERNAME&quot; &quot;$DOCKER_PASSWORD&quot; &quot;$IMAGE&quot;; fi&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Get the project version&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;before_deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;if [[ $TRAVIS_BRANCH == &quot;master&quot; ]]; then git tag $TRAVIS_TAG; fi&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Create release in GitHub&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;releases&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$TRAVIS_TAG&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$TRAVIS_TAG&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;target_commitish&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$TRAVIS_COMMIT&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$GITHUB_TOKEN&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;skip_cleanup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its ported version looks very similar &lt;a href=&quot;https://github.com/aem-design/docker-toughday/blob/master/.github/workflows/build.yml&quot;&gt;Gitub Actions&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;DOCKER_REGISTRY&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.io&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ORGANISATION_NAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;aemdesign&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;DOCKER_USERNAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.DOCKER_USERNAME }}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;DOCKER_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.DOCKER_PASSWORD }}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;set envirnment variables&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;config&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo GET PACKAGES&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;export PACKAGE_PATH=$(pwd)/packages&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo ::set-env name=PACKAGE_PATH::${PACKAGE_PATH}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;source &amp;lt;(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_config.sh)&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo $PACKAGE_PATH&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;if [[ ! -d $PACKAGE_PATH ]]; then mkdir $PACKAGE_PATH; fi&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo PACKAGES CONTENTS $PACKAGE_PATH&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;ls -latr $PACKAGE_PATH&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo DOWNLOAD PACKAGES INTO ${PACKAGE_PATH}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://helpx.adobe.com/experience-manager/6-2/sites/developing/using/tough-day/_jcr_content/main-pars/download-section/download-1/file.res/toughday-6.1.jar&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://repo.adobe.com/nexus/content/repositories/releases/com/adobe/qe/toughday2/0.9.2/toughday2-0.9.2.jar&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;./scripts/download.sh &quot;$PACKAGE_PATH/&quot; &quot;-&quot; &quot;-&quot; &quot;https://repo.adobe.com/nexus/content/repositories/releases/com/adobe/qe/toughday2/0.2.1/toughday2-0.2.1.jar&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;ls -latr $PACKAGE_PATH&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;source &amp;lt;(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_version.sh)&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build and test docker image&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;docker build --pull -t $IMAGE:$IMAGE_VERSION .&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;source &amp;lt;(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/container_verify.sh)&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;(cd test &amp;amp;&amp;amp; ./run_tests.sh &quot;$IMAGE:$IMAGE_VERSION&quot;)&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;docker images&lt;/span&gt;
          
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;login to docker registry&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo &quot;${{ secrets.DOCKER_PASSWORD }}&quot; | docker login ${DOCKER_REGISTRY} -u &quot;${{ secrets.DOCKER_USERNAME }}&quot; --password-stdin&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;push image version&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker push $IMAGE:$IMAGE_VERSION&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;push latest image on master&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;github.ref == 'refs/heads/master'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;docker tag $IMAGE:$IMAGE_VERSION $IMAGE:latest&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;docker push $IMAGE:latest&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;update registry description with readme on master&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;github.ref == 'refs/heads/master'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;docker run --rm -v $(pwd):/data/ aemdesign/dockerhub-description &quot;$DOCKER_USERNAME&quot; &quot;$DOCKER_PASSWORD&quot; &quot;$IMAGE&quot;&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meeDamian/github-release@1.0&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GITHUB_TAG }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GITHUB_TAG }}&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ env.GIT_RELEASE_NOTES }}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Differences are almost minor and migration follow copy-paste approach for majority of pipeline which is ideal. That‚Äôs all there is to this migration all you have to do now is commit and head to the Actions console in your repo to see your build take off üöÄ as the next stop is the moon!&lt;/p&gt;

&lt;p&gt;As always checkout the code, fork, extend and contribute if you wish.&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="automation" /><category term="github" /><category term="actions" /><category term="github-actions" /><summary type="html">We are in the end game now</summary></entry><entry><title type="html">Updating Existing Docker Container Variables üí™üòéüëç</title><link href="https://aem.design/blog/2019/09/19/updating-existing-docker-container-variables%F0%9F%92%AA%F0%9F%98%8E%F0%9F%91%8D" rel="alternate" type="text/html" title="Updating Existing Docker Container Variables üí™üòéüëç" /><published>2019-09-19T00:37:00+00:00</published><updated>2019-09-19T00:37:00+00:00</updated><id>https://aem.design/blog/2019/09/19/updating-docker-container-variables</id><content type="html" xml:base="https://aem.design/blog/2019/09/19/updating-existing-docker-container-variables%F0%9F%92%AA%F0%9F%98%8E%F0%9F%91%8D">&lt;p&gt;Updating docker config of an existing container can be a daunting task. Usually its just easier to kill the container and start from scratch and this approach is preferred when it comes to docker principles.&lt;/p&gt;

&lt;p&gt;As of current &lt;code class=&quot;highlighter-rouge&quot;&gt;19+&lt;/code&gt; version of docker there isn‚Äôt a way to do it via API, this mean that you need to manually change config of container in the docker engine running your container.&lt;/p&gt;

&lt;p&gt;Flow on effect is that when you change this docker config you will need to restart docker engine, which is fine when you have only one container running but if you have lots this is out of the question.&lt;/p&gt;

&lt;p&gt;But lets say you have just started AEM instance not using the &lt;a href=&quot;/blog/2019/08/30/docker-aem-bundle&quot;&gt;AEM Bundle&lt;/a&gt; container, without mounting any volumes and you have spent last hour installing packages and doing thing to that container that you do not want to do again. And you got an urge to do some java code debugging on your new container and you just realised that you did not add the required debug JAVA_OPTS when you started the container:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;-Xdebug&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Xrunjdwp&lt;/span&gt;:transport&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;58242,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Starting from scratch will be good option by using the &lt;a href=&quot;/blog/2019/08/30/docker-aem-bundle&quot;&gt;AEM Bundle&lt;/a&gt; by all those changes you made will be lost. At this point in despair you forget what paths you updated and you decide to persevere with updating docker engine config.&lt;/p&gt;

&lt;p&gt;You can follow these steps to update your existing container config with java options that will allow you to debug your AEM instance in a container:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Stop your container&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stop author
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Edit config of your container&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Running following command will load the docker config into VI and where you can proceed to update your container config:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /var/lib/docker:/var/lib/docker alpine vi &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/var/lib/docker/containers/{{.Id}}/config.v2.json'&lt;/span&gt; author65bundle&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will see config on one line, yes this is how it is and you need to thread carefully.&lt;/p&gt;

&lt;p&gt;In our case you will need to scroll until you find  &lt;code class=&quot;highlighter-rouge&quot;&gt;AEM_JVM_OPTS&lt;/code&gt; attribute scroll to the end its value and insert (press &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; to enter ) AEM Java Debug parameters:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;-Xdebug&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Xrunjdwp&lt;/span&gt;:transport&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;58242,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then press &lt;code class=&quot;highlighter-rouge&quot;&gt;ESC&lt;/code&gt; key followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;:qw&lt;/code&gt; and press enter.&lt;/p&gt;

&lt;p&gt;You now have your config tweak inserted and you can proceed.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Restart your docker&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In worst case you can just reboot, in best case you can restart the service or use restart option of your Docker Desktop Menu:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/docker/docker-desktop-menu.png&quot; alt=&quot;Docker Desktop Menu&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check your settings tweaks have worked&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After your docker engine is backup you can check if your tweaks have worked&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker inspect author
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Start your container&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker start author
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This process can be used to update other settings as you wish.&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="automation" /><summary type="html">If you have to update existing docker container properties you can do it here is how</summary></entry><entry><title type="html">Trigger Travis pipeline from another pipeline üëâüìüüöÄ</title><link href="https://aem.design/blog/2019/10/01/trigger-travis-pipeline-from-another-pipeline%F0%9F%91%89%F0%9F%93%9F%F0%9F%9A%80" rel="alternate" type="text/html" title="Trigger Travis pipeline from another pipeline üëâüìüüöÄ" /><published>2019-09-19T00:37:00+00:00</published><updated>2019-09-19T00:37:00+00:00</updated><id>https://aem.design/blog/2019/10/01/trigger-travis-pipeline-from-another-pipeline</id><content type="html" xml:base="https://aem.design/blog/2019/10/01/trigger-travis-pipeline-from-another-pipeline%F0%9F%91%89%F0%9F%93%9F%F0%9F%9A%80">&lt;p&gt;Keeping with DevOps spirit mean that things on you project should be very modular, this then will mean that you will have a &lt;a href=&quot;https://travis-ci.org/aem-design&quot;&gt;lot of pipelines&lt;/a&gt;. Eventually you will come to scenario that will require pipelines to start other pipelines.&lt;/p&gt;

&lt;p&gt;In our scenario whenever pipeline for &lt;a href=&quot;https://travis-ci.org/aem-design/aemdesign-aem-core&quot;&gt;aemdesign-aem-core&lt;/a&gt; succeeds its artifacts should be used in creating a docker container pipeline &lt;a href=&quot;https://travis-ci.org/aem-design/aem&quot;&gt;aem-design/aem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Current Travis definition does not have OOTB option to do this. But fortunately travis comes with API that can be used to interrogate Travis config as well as &lt;a href=&quot;https://docs.travis-ci.com/user/triggering-builds/&quot;&gt;trigger builds with API V3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The process to trigger API is simple enough&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get a Travis API token from &lt;a href=&quot;https://travis-ci.com/profile&quot;&gt;Travis Profile page&lt;/a&gt;, this is a manual step.&lt;/li&gt;
  &lt;li&gt;Send a POST request with specific headers to the API endpoint for your repo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that‚Äôs it really, all you need to do now is do the POST somehow.&lt;/p&gt;

&lt;p&gt;As you come to expect, to make this as simple as possible for reuse in pipelines or manual execution, abstracting the API into a handy docker &lt;a href=&quot;https://hub.docker.com/r/aemdesign/tavis-build-trigger&quot;&gt;tavis-build-trigger&lt;/a&gt; image is easier done that writing about it.&lt;/p&gt;

&lt;p&gt;The approach for docker container is to leverage NodeJS to make the request to API, abstract any logic into a nice package that can be executed anywhere where docker is available.&lt;/p&gt;

&lt;p&gt;NPM has a very handy &lt;a href=&quot;https://www.npmjs.com/package/request&quot;&gt;request&lt;/a&gt; module that makes accessing URI‚Äôs as easy as using &lt;a href=&quot;https://curl.haxx.se/&quot;&gt;curl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Furthermore as the new &lt;a href=&quot;https://github.com/aem-design/travis-build-trigger&quot;&gt;tavis-build-trigger&lt;/a&gt; NodeJS app is a command line app, its mandatory to give optimal command line experience using &lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;yargs&lt;/a&gt;, after all, it‚Äôs little details that count. &lt;a href=&quot;https://www.npmjs.com/package/yargs&quot;&gt;Yargs&lt;/a&gt; provides you with a very simple way of creating beautiful command line experiences without the arghh ( its a pirate-themed library).&lt;/p&gt;

&lt;p&gt;When you execute the app though docker without any parameters&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; aemdesign/travis-trigger-build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will be greeted with a nice command line helper menu in case you did not read the &lt;a href=&quot;https://github.com/aem-design/travis-build-trigger/blob/master/README.md&quot;&gt;README&lt;/a&gt; to get you going with command line options.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Usage: travis-trigger-build.js &amp;lt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options]

Commands:
  travis-trigger-build.js start-branch-build                         Start repo build &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a particular branch
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;github_repo,travis_token,github_user]                                                                            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;aliases: sbb]

Options:
  &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;       show &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;                                                                                             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;boolean]
  &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;    show version                                                                                          &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;boolean]
  &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;      debug mode                                                                                            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;boolean]
  &lt;span class=&quot;nt&quot;&gt;--github_repo&lt;/span&gt;    repo name                                                                                            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;required]
  &lt;span class=&quot;nt&quot;&gt;--github_user&lt;/span&gt;    github user name where repo is located                                                               &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;required]
  &lt;span class=&quot;nt&quot;&gt;--travis_token&lt;/span&gt;   travis access token                                                                                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;required]
  &lt;span class=&quot;nt&quot;&gt;--github_branch&lt;/span&gt;  github branch to trigger build on                                                           &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;default: &lt;span class=&quot;s2&quot;&gt;&quot;master&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--travis_url&lt;/span&gt;     travis url to use to trigger &lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;                                  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;default: &lt;span class=&quot;s2&quot;&gt;&quot;https://api.travis-ci.org/repo/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Examples:
  node generator.js sbb &lt;span class=&quot;nt&quot;&gt;--github_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;aem-design &lt;span class=&quot;nt&quot;&gt;--github_repo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;aem &lt;span class=&quot;nt&quot;&gt;--github_token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;TOKEN&amp;gt;

Not enough non-option arguments: got 0, need at least 1
________________________________________________________________________________
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This provides a lot convenience and adds polish to your project. Having this library in docker container gets you away from having unnecessary scripts in your pipelines.&lt;/p&gt;

&lt;p&gt;As always checkout the code, fork, extend and contribute if you wish.&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="automation" /><category term="travis" /><summary type="html">When you want to trigger travis pipeline from any other pipeline a docker app will come to the rescue</summary></entry><entry><title type="html">AEM and Docker üòçüòò</title><link href="https://aem.design/blog/2019/09/04/aem-and-docker%F0%9F%98%8D%F0%9F%98%98" rel="alternate" type="text/html" title="AEM and Docker üòçüòò" /><published>2019-09-04T00:37:00+00:00</published><updated>2019-09-04T00:37:00+00:00</updated><id>https://aem.design/blog/2019/09/04/aem-and-docker</id><content type="html" xml:base="https://aem.design/blog/2019/09/04/aem-and-docker%F0%9F%98%8D%F0%9F%98%98">&lt;p&gt;By now you would have seen previous posts &lt;a href=&quot;/blog/2019/07/01/docker-containers-everywhere&quot;&gt;Docker Containers Everywhere&lt;/a&gt; and &lt;a href=&quot;/blog/2019/08/30/docker-aem-bundle&quot;&gt;Docker AEM Bundle&lt;/a&gt;. You might have tried out those images, if you have not, I encourage you to try them out, you will like it.&lt;/p&gt;

&lt;p&gt;Now that you have tried those images out, one major question you may ask ‚Äúis that for development only?‚Äù.&lt;/p&gt;

&lt;p&gt;You might even think/say ‚ÄúI thought AEM does not work in Docker‚Äù?!&lt;/p&gt;

&lt;p&gt;And the answer to both of those questions is no. You should be using Docker in production, if you are not you are missing out.&lt;/p&gt;

&lt;p&gt;Docker is awesome, period. It once and for all creates a method for establishing consistency with pure simplicity. One of Docker best practices is to have one process per container, many great reasons why but not going to go into them, which is what AEM and mainly java does not play along with easily and we will return to this in a moment.&lt;/p&gt;

&lt;p&gt;As far as AEM is concerned the issues that you might experience running AEM in a container comes from underlying Java Forking. Googling this will give more technical details but at high level this means that Java main process creates new process that are not ‚Äúchildren‚Äù on the main process.&lt;/p&gt;

&lt;p&gt;So AEM runs on Java and it forks. In AEM most obvious things that trigger this are workflows that execute external processes, external services that AEM hosts like image service and repository services that handle all of the content wiring and reading, sounds important right. So if we can solve this forking thing then the issue will go away.&lt;/p&gt;

&lt;p&gt;This manifest a problem of running AEM in a container creates following situation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;you start a docker container&lt;/li&gt;
  &lt;li&gt;docker container starts and binds to main java process
    &lt;ul&gt;
      &lt;li&gt;any of its subsequent children processes are not managed by container&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;you try to stop the container docker will send a shutdown signal to container
    &lt;ul&gt;
      &lt;li&gt;that will pass that to the java process
        &lt;ul&gt;
          &lt;li&gt;that java process will then respect that signal and gracefully close things it controls
            &lt;ul&gt;
              &lt;li&gt;but will leave a bunch of processes orphaned üòû&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;docker container becomes unresponsive/hangs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;you try to &lt;code class=&quot;highlighter-rouge&quot;&gt;docker kill&lt;/code&gt; the container and all its internal orphaned processes
    &lt;ul&gt;
      &lt;li&gt;one of which will be the repository so you will lose content üò± no happy ending here&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok so yeah not so cool!&lt;/p&gt;

&lt;p&gt;But what is cool is a project tini by Thomas Orozco that provides &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;A tiny but valid &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; for containers&lt;/a&gt;. This solves the forking issue once and for all.&lt;/p&gt;

&lt;p&gt;Adding &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt; as the entry point into your docker containers allows consistency in handling processes in that container.&lt;/p&gt;

&lt;p&gt;This is how the implementation in a base container &lt;a href=&quot;https://github.com/aem-design/centos-tini&quot;&gt;centos-tini&lt;/a&gt; looks like.&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;       centos:latest&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;MAINTAINER&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; devops &amp;lt;devops@aem.design&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;   os=&quot;centos&quot; \&lt;/span&gt;
        container.description=&quot;centos with tini&quot; \
        version=&quot;0.18.0&quot; \
        imagename=&quot;centos-tini&quot;


&lt;span class=&quot;k&quot;&gt;ARG&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; TINI_VERSION=&quot;v0.18.0&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ARG&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; TINI_KEY=&quot;595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ARG&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; TINI_URL=&quot;https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-amd64&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TINI_URL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /bin/tini &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TINI_URL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.asc &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /bin/tini.asc &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; gpg &lt;span class=&quot;nt&quot;&gt;--keyserver&lt;/span&gt; hkp://p80.pool.sks-keyservers.net:80 &lt;span class=&quot;nt&quot;&gt;--recv-keys&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TINI_KEY&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; gpg &lt;span class=&quot;nt&quot;&gt;--verify&lt;/span&gt; /bin/tini.asc &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x /bin/tini

&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;/bin/tini&quot;, &quot;--&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Very simple image with key line &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTRYPOINT [&quot;/bin/tini&quot;, &quot;--&quot;]&lt;/code&gt; that ensures that all container commands will be handled by &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt;. So this means that anytime a process is spawned in the container it will be a child of &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt;. So when it comes to closing the container &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt; will close all processes and thus you will have a graceful container stoppage.&lt;/p&gt;

&lt;p&gt;Further reviewing the image for &lt;a href=&quot;https://github.com/aem-design/aem&quot;&gt;aem&lt;/a&gt; you will find similar &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTRYPOINT [&quot;/bin/tini&quot;, &quot;--&quot;, &quot;/aem/run-tini.sh&quot;]&lt;/code&gt; that uses an adopted script to run command &lt;code class=&quot;highlighter-rouge&quot;&gt;exec java $AEM_JVM_OPTS $AEM_RUNMODE -jar $AEM_JARFILE $AEM_START_OPTS&lt;/code&gt; to stat the AEM java process. This ensure that the execute command is passed to &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt; for handling.&lt;/p&gt;

&lt;p&gt;You can also use the &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD [&quot;/dispatcher/start.sh&quot;]&lt;/code&gt; as used in &lt;a href=&quot;https://github.com/aem-design/dispatcher&quot;&gt;dispatcher&lt;/a&gt; image to the same effect. Docker appends the &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt; statement to &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTRYPOINT&lt;/code&gt; command and as &lt;a href=&quot;https://github.com/aem-design/dispatcher&quot;&gt;dispatcher&lt;/a&gt; is based on &lt;a href=&quot;https://github.com/aem-design/centos-tini&quot;&gt;centos-tini&lt;/a&gt; its final command that will be executed will be &lt;code class=&quot;highlighter-rouge&quot;&gt;[&quot;/bin/tini&quot;, &quot;--&quot;, &quot;/dispatcher/start.sh&quot;]&lt;/code&gt;, once again letting tini manage processes.&lt;/p&gt;

&lt;p&gt;Hopefully if you were scared of using java in docker containers after using &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt; your fears will wash away with tears of happiness üòÇ&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="automation" /><category term="tini" /><summary type="html">I thought AEM does not work in Docker?</summary></entry><entry><title type="html">Docker AEM Bundle</title><link href="https://aem.design/blog/2019/08/30/docker-aem-bundle" rel="alternate" type="text/html" title="Docker AEM Bundle" /><published>2019-08-30T23:37:00+00:00</published><updated>2019-08-30T23:37:00+00:00</updated><id>https://aem.design/blog/2019/08/30/docker-aem-bundle</id><content type="html" xml:base="https://aem.design/blog/2019/08/30/docker-aem-bundle">&lt;p&gt;Building on the previous work &lt;a href=&quot;/blog/2019/07/01/docker-containers-everywhere&quot;&gt;Docker Containers Everywhere&lt;/a&gt; we have added a new AEM 6.5 Bundle image.&lt;/p&gt;

&lt;p&gt;This image has the following packages that are installed on first start-up.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;File&lt;/th&gt;
      &lt;th&gt;Notes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AEM-6.5.1.0-6.5.1.zip&lt;/td&gt;
      &lt;td&gt;sp 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AEM-Forms-6.5.1.0-LX-6.0.88.zip&lt;/td&gt;
      &lt;td&gt;aem forms&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;aem-compat-cq65-to-cq64-0.18.zip&lt;/td&gt;
      &lt;td&gt;aem forms backwards compatibility&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;com.adobe.acs.bundles.twitter4j-content-1.0.0.zip&lt;/td&gt;
      &lt;td&gt;acs twitter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;acs-aem-commons-content-4.3.0.zip&lt;/td&gt;
      &lt;td&gt;acs commons&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;core.wcm.components.all-2.5.0.zip&lt;/td&gt;
      &lt;td&gt;adobe corecomponents&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;accesscontroltool-package-2.3.2.zip&lt;/td&gt;
      &lt;td&gt;netcentric acl tools&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;accesscontroltool-oakindex-package-2.3.2.zip&lt;/td&gt;
      &lt;td&gt;netcentric acl tools&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vanityurls-components-1.0.2.zip&lt;/td&gt;
      &lt;td&gt;vanity url servlet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;aemdesign-aem-core-deploy-{LATEST}.zip&lt;/td&gt;
      &lt;td&gt;aem design core&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;aemdesign-aem-support-deploy-{LATEST}.zip&lt;/td&gt;
      &lt;td&gt;aem design showcase content&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Packages that have &lt;code class=&quot;highlighter-rouge&quot;&gt;{LATEST}&lt;/code&gt; mean that when the container is built it will pull the latest version available in git repository.&lt;/p&gt;

&lt;h3 id=&quot;running-aem-in-docker&quot;&gt;Running AEM in Docker&lt;/h3&gt;

&lt;p&gt;To start local author AEM 6.5 instance with SP3 instance on port 4502 with Bundled Packages run the following&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; author &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4502&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30303&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem:6.5.3.0-bundle 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Starting local publish AEM 6.5 instance with SP3 on port 4503 is a matter of updating a run mode to &lt;code class=&quot;highlighter-rouge&quot;&gt;publish&lt;/code&gt; and updating ports for accessing the service and you should get the following&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; publish &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=publish,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4503&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30304&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem:6.5.3.0-bundle 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you would like to start AEM Bundle version on different port to say run it along existing aem instance all you need to do is change name of your container and its ports like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; author65bundle &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4565&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30365&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem:6.5.3.0-bundle 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To start local demo AEM 6.4 instance on port 4502 with Bundled Packages run the following&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; author64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4502&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30303&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem:6.4.0-bundle 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;

&lt;p&gt;You will need a license to active the instance once it ready as it will prompt you to input your details on License splash screen before you can continue:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/license/license-page.png&quot; alt=&quot;AEM License Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Confirmation screen will show you what version of AEM you are running.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/license/license-confirm.png&quot; alt=&quot;AEM License Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Additionally once you login you can visit the &lt;a href=&quot;http://localhost:4502/system/console/productinfo&quot;&gt;Product Info&lt;/a&gt; console to see AEM version. Your version number will be made up of major AEM version and Service Pack Version. For example if you choose AEM 6.5 with Service Pack 1 its version will be &lt;code class=&quot;highlighter-rouge&quot;&gt;6.5.1.0&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;packages&quot;&gt;Packages&lt;/h3&gt;

&lt;p&gt;You will notice that your bundle container will come with latest SP installed and other packages. Each bundle image tag has a corresponding branch in github you can check the &lt;a href=&quot;https://github.com/aem-design/aem/blob/6.5.0-bundle/.travis.yml&quot;&gt;.travis.yml&lt;/a&gt; file to see which packages are pre-installed.&lt;/p&gt;

&lt;h3 id=&quot;thank-you&quot;&gt;Thank you&lt;/h3&gt;

&lt;p&gt;Please checkout the docker hub &lt;a href=&quot;https://hub.docker.com/r/aemdesign/aem&quot;&gt;aemdesign/aem&lt;/a&gt; for further details.&lt;/p&gt;

&lt;p&gt;If you would like to contribute or fork the code you can get it on github &lt;a href=&quot;https://github.com/aem-design/aem&quot;&gt;https://github.com/aem-design/aem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bundle version comes with following &lt;a href=&quot;https://github.com/aem-design&quot;&gt;AEM.Design&lt;/a&gt; projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core&quot;&gt;aemdesign-aem-core&lt;/a&gt; that contains all of the components code&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-support&quot;&gt;aemdesign-aem-support&lt;/a&gt; that contains all of the supporting content, front-end code and component showcase.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="automation" /><summary type="html">Building on the previous work Docker Containers Everywhere we have added a new AEM 6.5 Bundle image.</summary></entry><entry><title type="html">Docker Containers Everywhere</title><link href="https://aem.design/blog/2019/07/01/docker-containers-everywhere" rel="alternate" type="text/html" title="Docker Containers Everywhere" /><published>2019-07-01T23:37:00+00:00</published><updated>2019-07-01T23:37:00+00:00</updated><id>https://aem.design/blog/2019/07/01/docker-containers-everywhere</id><content type="html" xml:base="https://aem.design/blog/2019/07/01/docker-containers-everywhere">&lt;p&gt;Docker is your best friend when it comes to AEM! Yes there are so many countless ways of running AEM instances.
But AEM will always be better with Docker. 
AEM in docker allows you to run multiple instances of AEM at a drop of a hat. 
No need to copy files around or look for Jar‚Äôs.&lt;/p&gt;

&lt;p&gt;If you want to quickly start a local demo AEM 6.5 instance on port &lt;code class=&quot;highlighter-rouge&quot;&gt;4502&lt;/code&gt; with debug port &lt;code class=&quot;highlighter-rouge&quot;&gt;30303&lt;/code&gt; all you have to do is run this command using &lt;a href=&quot;https://hub.docker.com/r/aemdesign/aem&quot;&gt;aemdesign/aem&lt;/a&gt; image&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; author &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4502&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30303&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Don‚Äôt forget to have your AEM License key handy you gona need it for the AEM license page, and&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Don‚Äôt forget the debug port you can use it in your IntelliJ Ultimate, you can read more about this here &lt;a href=&quot;https://www.jetbrains.com/help/idea/run-debug-configuration-jsr45-compatible-server.html&quot;&gt;Run/Debug Configuration: JSR45 Compatible Server&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then you decide that you want to compare latest AEM to AEM 6.4 with a tweak to port &lt;code class=&quot;highlighter-rouge&quot;&gt;4512&lt;/code&gt; and image tag &lt;code class=&quot;highlighter-rouge&quot;&gt;aemdesign/aem:6.4.0&lt;/code&gt; you are instantly in business&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; author64 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4512&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p30313&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem:6.4.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then if you decide to run AEM 6.5 publish instance, same command with minor update to &lt;code class=&quot;highlighter-rouge&quot;&gt;AEM_RUNMODE&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;publish&lt;/code&gt; using same &lt;a href=&quot;https://hub.docker.com/r/aemdesign/aem&quot;&gt;aemdesign/aem&lt;/a&gt; image and you have a clean publish starting up&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; publish &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TZ=Australia/Sydney&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_RUNMODE=-Dsling.run.modes=publish,crx3,crx3tar,dev&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p4503&lt;/span&gt;:8080 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p40404&lt;/span&gt;:58242 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/aem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wait there is more, if you like the sound and simplicity of AEM containers you gona love the &lt;a href=&quot;https://hub.docker.com/r/aemdesign/dispatcher&quot;&gt;aemdesign/dispatcher&lt;/a&gt; container!&lt;/p&gt;

&lt;p&gt;Setting up Dispatcher is hard! 
For one you have to know apache which is about 20 years old. 
Then you need to know Dispatcher‚Ä¶ which is also a tricky as it docs.. oh the docs.. you gona love trolling though them all to create your ultimate dispatcher config!&lt;/p&gt;

&lt;p&gt;OR you run this to start your publish dispatcher pointing to your publish docker&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; publish-dispatcher &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_MODULES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/dispatcher/httpd/modules&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_SSL_SUBJ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/C=AU/ST=VIC/L=Melbourne/O=AEM.Design/CN=dispatcher&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_RUN_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apache&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_RUN_GROUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apache&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_RUN_USERID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1100 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_RUN_GROUPID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1100 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_LOGLEVEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;APACHE_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.4&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.3.2&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_LOGLEVEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dispatcher&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_PROPOGATESYNDPOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_SERVESTALEONERROR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_STATLEVEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_CACHEAUTHORIZED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DISPATCHER_SESSIONMANAGEMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;RENDERER_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;route &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; get 0.0.0.0 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/interface: / {print $2}'&lt;/span&gt; | xargs ifconfig  | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'inet '&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'127.0.0.1'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;RENDERER_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4503 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;RENDERER_TIMEOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10000 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;RENDERER_RESOLVE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8080:8080 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8433:8433 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
aemdesign/dispatcher
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Yes RENDERER_HOST does run an intimidating bash command to establish your local IP address&lt;/em&gt; üòéüòª&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You don‚Äôt need to access dispatcher container files to check the logs as they are all being redirected to container log, like all good container should! 
In JSON format native to all your log monitoring tool! üòéüòª
You can monitor logs with docker logs command&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker logs &lt;span class=&quot;nt&quot;&gt;-tf&lt;/span&gt; publish-dispatcher &lt;span class=&quot;nt&quot;&gt;--since&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2019-07-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command will tail the error log from the container for you to see. 
Change the parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;since&lt;/code&gt; to the date from wich you want to view the log from, log will get long, but that what log shipping is for üòéüòª&lt;/p&gt;

&lt;p&gt;Hope this will help you with your AEM Docker journey!&lt;/p&gt;

&lt;p&gt;Have a look at our other handy docker containers at &lt;a href=&quot;https://hub.docker.com/u/aemdesign&quot;&gt;https://hub.docker.com/u/aemdesign&lt;/a&gt;&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="dispatcher" /><summary type="html">Docker is your best friend when it comes to AEM! Yes there are so many countless ways of running AEM instances. But AEM will always be better with Docker. AEM in docker allows you to run multiple instances of AEM at a drop of a hat. No need to copy files around or look for Jar‚Äôs.</summary></entry><entry><title type="html">Docker Automation Testing</title><link href="https://aem.design/blog/2019/07/05/docker-automation-testing" rel="alternate" type="text/html" title="Docker Automation Testing" /><published>2019-07-01T23:37:00+00:00</published><updated>2019-07-01T23:37:00+00:00</updated><id>https://aem.design/blog/2019/07/05/docker-automation-testing</id><content type="html" xml:base="https://aem.design/blog/2019/07/05/docker-automation-testing">&lt;p&gt;Quick update to showcase upcoming automated tests results using Github Pages.&lt;/p&gt;

&lt;p&gt;On previous occasions the only way to show off how automation test suite result should look was to show some screenshots similar to this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/automation-testing/summary-all.png&quot; alt=&quot;Automation Test Summary&quot; /&gt;
&lt;img src=&quot;/assets/images/automation-testing/summary-errorsonly.png&quot; alt=&quot;Automation Test Summary - Errors Only&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/automation-testing/spec.png&quot; alt=&quot;Automation Test Spec&quot; /&gt;
&lt;img src=&quot;/assets/images/automation-testing/spec-expanded.png&quot; alt=&quot;Automation Test Spec - Expanded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From now on the results will be published to github pages to provide an experience you should be having with your automate test suites.&lt;/p&gt;

&lt;p&gt;You can view the output from test suite on github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aem-design.github.io/aemdesign-aem-support/&quot;&gt;https://aem-design.github.io/aemdesign-aem-support/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us know what you think!&lt;/p&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="devops" /><category term="aem" /><category term="docker" /><category term="dispatcher" /><category term="automation" /><category term="testing" /><summary type="html">Quick update to showcase upcoming automated tests results using Github Pages.</summary></entry><entry><title type="html">Open source is for feedback</title><link href="https://aem.design/blog/2019/06/05/open-source-is-for-feedback" rel="alternate" type="text/html" title="Open source is for feedback" /><published>2019-06-05T11:00:00+00:00</published><updated>2019-06-05T11:00:00+00:00</updated><id>https://aem.design/blog/2019/06/05/open-source-release</id><content type="html" xml:base="https://aem.design/blog/2019/06/05/open-source-is-for-feedback">&lt;p&gt;Open source is at the core of AEM.&lt;/p&gt;

&lt;p&gt;Supporting community is core principle of AEM.Design. AEM Design has always been about providing principled design patterns for AEM, that work in practice.
Our components are tested though practice and implemented so that you can use them the way you want.
We aim at developing component that are free of noise and deliver exactly what you are looking for clean, lean HTML footprint that speaks content and does not get on the way.&lt;/p&gt;

&lt;p&gt;We strongly believe that open source provides most transparent way of giving feedback about our work.
We believe that having a common goal for creating and spreading good practices on making your AEM experience awesome.
We do open source to encourage sharing of great things that can be done in AEM.&lt;/p&gt;

&lt;p&gt;Here is the list of all components that we currently have in the framework. &lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/wiki/Component-List&quot;&gt;Component List&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Component Category&lt;/th&gt;
      &lt;th&gt;Link&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Cloud Services / Rest&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/rest&quot;&gt;Rest&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cloud Services / Salesforce API&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/salesforceapi&quot;&gt;Salesforce API&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Common / Redirection Notification&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/common/redirectnotification/v2/redirectnotification&quot;&gt;Redirection Notification&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Common / Static Content Include&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/common/staticinclude/v2/staticinclude&quot;&gt;Static Content Include&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Common / Timing Component&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/common/timing/v2/timing&quot;&gt;Timing Component&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / File Download Link&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/download/v2/download&quot;&gt;File Download Link&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Embed Source&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/embedsource/v2/embedsource&quot;&gt;Embed Source&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / External&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/external/v2/external&quot;&gt;External&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Link&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/link/v2/link&quot;&gt;Link&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Content Reference&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/reference/v2/reference&quot;&gt;Content Reference&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Table&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/table/v2/table&quot;&gt;Table&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Rich Text&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/text/v2/text&quot;&gt;Rich Text&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Tool Tip&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/tooltip/v2/tooltip&quot;&gt;Tool Tip&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Page Author&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/pageauthor/v2/pageauthor&quot;&gt;Page Author&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Page Date&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/pagedate/v2/pagedate&quot;&gt;Page Date&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Page Description&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/pagedescription/v2/pagedescription&quot;&gt;Page Description&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Page Tags&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/pagetags/v2/pagetags&quot;&gt;Page Tags&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content / Page Title&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/content/pagetitle/v2/pagetitle&quot;&gt;Page Title&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Details / Contact Details&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/details/contact-details/v2/contact-details&quot;&gt;Contact Details&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Details / Event Details&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/details/event-details/v2/event-details&quot;&gt;Event Details&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Details / Location Details&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/details/location-details/v2/location-details&quot;&gt;Location Details&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Details / News Details&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/details/news-details/v2/news-details&quot;&gt;News Details&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Details / Page Details&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/details/page-details/v2/page-details&quot;&gt;Page Details&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Article&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/article/v2/article&quot;&gt;Article&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Aside&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/aside/v2/aside&quot;&gt;Aside&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Breadcrumb&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/breadcrumb/v2/breadcrumb&quot;&gt;Breadcrumb&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Columns&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/colctrl/v2/colctrl&quot;&gt;Columns&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Content Block&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/contentblock/v2/contentblock&quot;&gt;Content Block&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Content Block Lock&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/contentblocklock&quot;&gt;Content Block Lock&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Content Block Menu&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/contentblocklock/v2/contentblocklock&quot;&gt;Content Block Menu&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Content Tabs&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/contenttabs/v2/contenttabs&quot;&gt;Content Tabs&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Footer&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/footer/v2/footer&quot;&gt;Footer&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Header&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/header/v2/header&quot;&gt;Header&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Nav Bar&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/navbar/v2/navbar&quot;&gt;Nav Bar&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layout / Container&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/layout/container&quot;&gt;Container&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Asset List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/assetlist/v2/assetlist&quot;&gt;Asset List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Contact List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/contactlist/v2/contactlist&quot;&gt;Contact List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Event List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/eventlist/v2/eventlist&quot;&gt;Event List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Lang Nav&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/langnav/v2/langnav&quot;&gt;Lang Nav&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/list/v2/list&quot;&gt;List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / List Nav&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/listnav/v2/listnav&quot;&gt;List Nav&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Location List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/locationlist/v2/locationlist&quot;&gt;Location List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / News List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/newslist/v2/newslist&quot;&gt;News List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Page List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/pagelist/v2/pagelist&quot;&gt;Page List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Search Results List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/searchlist/v2/searchlist&quot;&gt;Search Results List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Tag List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/taglist/v2/taglist&quot;&gt;Tag List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lists / Nav List&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/lists/navlist/v2/navlist&quot;&gt;Nav List&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Media / Audio&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/media/audio/v2/audio&quot;&gt;Audio&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Media / Image&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/media/image/v2/image&quot;&gt;Image&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Media / Video&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/media/video/v2/video&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Analytics / Analytics Data Layer&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/analytics/datalayer/v2/datalayer&quot;&gt;Analytics Data Layer&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / AEM.Design Base Page&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/base/v3/base&quot;&gt;AEM.Design Base Page&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Cloud Config / AddThis&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/cloudconfig/addthisconnect/config&quot;&gt;AddThis&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Cloud Config / Google Analytics&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/cloudconfig/googleanalytics/config&quot;&gt;Google Analytics&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Cloud Config / Google Map&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/cloudconfig/googlemap/config&quot;&gt;Google Map&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Column / AEM.Design One Column Page&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/column/one/v2/one&quot;&gt;AEM.Design One Column Page&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Column / AEM.Design Three Column Page&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/column/three/v2/three&quot;&gt;AEM.Design Three Column Page&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Column / AEM.Design Two Column Page&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/column/two/v2/two&quot;&gt;AEM.Design Two Column Page&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Common / Design Importer&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/common/design-importer&quot;&gt;Design Importer&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Template / Experience Fragment / AEM.Design Experience Fragment&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/template/experience-fragments/base/v2/xfpage&quot;&gt;AEM.Design Experience Fragment&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Widgets / AddThis / Addthis Button&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/widgets/addthis/sharebutton/v2/sharebutton&quot;&gt;Addthis Button&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Widgets / Online Media&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/widgets/onlinemedia/v2/onlinemedia&quot;&gt;Online Media&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Widgets / Search Box&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/widgets/search/v2/search&quot;&gt;Search Box&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Process Payload&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/processpayload&quot;&gt;Process Payload&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Project Task Manager&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/projecttaskmanager&quot;&gt;Project Task Manager&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Project Update&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/projectupdate&quot;&gt;Project Update&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Rest&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/rest&quot;&gt;Rest&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Salesforce API&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/salesforceapi&quot;&gt;Salesforce API&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Workflow / Send Email&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/workflow/sendemail&quot;&gt;Send Email&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coral / Common/Form / Tag Field&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/coral/common/form/tagfield&quot;&gt;Tag Field&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coral / Datasources / Forms&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/coral/datasources/forms&quot;&gt;Forms&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coral / Datasources / Tags&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/coral/datasources/tags&quot;&gt;Tags&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coral / Foundation / Accordion&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/coral/foundation/accordion&quot;&gt;Accordion&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coral / Widgets/Form / Asset Options&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/aem-design/aemdesign-aem-core/tree/master/aemdesign-aem-common/src/main/content/jcr_root/apps/aemdesign/components/coral/widgets/form/assetoptions&quot;&gt;Asset Options&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Max Barrass</name><email>max@aem.design</email><uri>http://maxbarrass.com</uri></author><category term="update" /><summary type="html">Open source is at the core of AEM.</summary></entry></feed>